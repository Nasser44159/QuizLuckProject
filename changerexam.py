import os
import sys
import django
from django.db import transaction

# Configuration de Django
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault("DJANGO_SETTINGS_MODULE", "QuizLuck.settings")
django.setup()
from quizapp.models import Question, Choice, Exam


OLD_EXAM_TITLE = "anat2016"
NEW_EXAM_TITLE = "Anatomie2016"

def update_exam_names():
    print(f"üîÑ Remplacement de '{OLD_EXAM_TITLE}' par '{NEW_EXAM_TITLE}' dans la base de donn√©es...")

    modified = False  # V√©rifier si au moins une modification est faite

    with transaction.atomic():
        # V√©rifier si l'examen "Anatomie2016" existe, sinon le cr√©er
        exam, created = Exam.objects.get_or_create(name=NEW_EXAM_TITLE)
        if created:
            print(f"‚úÖ Nouvel examen cr√©√© : {NEW_EXAM_TITLE}")

        # Mettre √† jour toutes les questions
        questions = Question.objects.filter(exam__name=OLD_EXAM_TITLE)
        for question in questions:
            print(f"üìù Mise √† jour de la question ID: {question.id} ‚Üí nouvel exam: {NEW_EXAM_TITLE}")
            question.exam = exam  # Changer l'examen de la question
            question.save()
            modified = True

            # Mettre √† jour tous les choix associ√©s √† cette question
            choices = Choice.objects.filter(question=question)
            for choice in choices:
                print(f"‚û°Ô∏è Mise √† jour du choix ID: {choice.id} ‚Üí nouvel exam: {NEW_EXAM_TITLE}")
                choice.question = question  # Rattacher le choix √† la question mise √† jour
                choice.save()
                modified = True

    if not modified:
        print("‚ùå Aucune modification effectu√©e (aucune question trouv√©e avec cet examen).")
    else:
        print("‚úÖ Toutes les questions et choix ont √©t√© mis √† jour avec succ√®s !")

# Ex√©cuter le script
update_exam_names()
